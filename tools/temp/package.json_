{
  "name": "little-dragon-ngo",
  "version": "1.0.0",
  "license": "MIT",
  "author": "Domagoj-Mario Mendas <developer.domagoj.mendas@gmail.com> (https://github.com/wwwsolutions)",
  "main": "dist/apps/functions/main.js",
  "engines": {
    "node": "10"
  },
  "scripts": {
    "config:env": "ts-node ./tools/environment.variables/set-env.ts",
    "database:migrate:little-dragon-ngo": "npm run config:env && ts-node -P ./tools/database/firestore/init-db.tsconfig.json ./tools/database/firestore/migrations/little-dragon-ngo.ts",
    "database:migrate:little-dragon-testing-ff2f8": "npm run config:env && ts-node -P ./tools/database/firestore/init-db.tsconfig.json ./tools/database/firestore/migrations/little-dragon-testing-ff2f8.ts",
    "database:clean:current:this_will_delete_all_collections_in_db_you_are_currently_logged_in": "firebase firestore:delete --all-collections -y",
    "fix:defaultCollectionOverride": "ts-node ./tools/fixes/defaultCollectionOverrideFix",
    "ng": "ng",
    "nx": "nx",
    "test": "npm run postinstall.web && ng test",
    "lint": "nx workspace-lint && ng lint",
    "clean": "rm -rf node_modules",
    "clean:build": "rm -rf dist/apps",
    "clean:all": "rm -rf node_modules && rm -rf dist/apps",
    "dep-graph": "nx dep-graph",
    "affected": "nx affected",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "ng update @nrwl/workspace",
    "update:check": "ng update",
    "workspace-schematic": "nx workspace-schematic",
    "help": "nx help",
    "resolution": "npx npm-force-resolutions",
    "presetup": "npm run clean",
    "setup": "npm run patch",
    "postsetup": "npm run fix:defaultCollectionOverride",
    "patch": "npm run resolution && npm install --loglevel verbose",
    "postinstall.web": "node tools/web/postinstall",
    "rebuild": "npm install && ng build admin-app && ng build client-app",
    "firebase:serve": "npm run config:env && concurrently --kill-others \"yarn run build:functions --watch\" \"firebase serve\"",
    "firebase:serve:functions": "concurrently --kill-others \"yarn run build:functions --watch\" \"firebase serve --only functions\"",
    "firebase:shell": "concurrently --kill-others \"yarn run build:functions --watch\" \"firebase functions:shell\" --raw",
    "firebase.deploy.hosting.production.admin-app": "bash ./tools/deployment/firebase.deploy.hosting.production.admin-app.sh",
    "firebase.deploy.hosting.production.client-app": "bash ./tools/deployment/firebase.deploy.hosting.production.client-app.sh",
    "firebase.deploy.hosting.production.functions": "bash ./tools/deployment/firebase.deploy.hosting.production.functions.sh",
    "firebase.deploy.production.all": "bash ./tools/deployment/firebase.deploy.production.all.sh",
    "firebase.deploy.hosting.staging.admin-app": "bash ./tools/deployment/firebase.deploy.hosting.staging.admin-app.sh",
    "firebase.deploy.hosting.staging.client-app": "bash ./tools/deployment/firebase.deploy.hosting.staging.client-app.sh",
    "firebase.deploy.hosting.staging.functions": "bash ./tools/deployment/firebase.deploy.hosting.staging.functions.sh",
    "firebase.deploy.staging.all": "bash ./tools/deployment/firebase.deploy.staging.all.sh",
    "build:functions": "npm run postinstall.web && ng build functions",
    "test:admin-app": "ng e2e admin-app-e2e --watch",
    "test:client-app": "ng e2e client-app-e2e --watch",
    "test:all": "ng e2e",
    "build:admin-app": "npm run config:env && npm run postinstall.web && ng build admin-app",
    "build:client-app": "npm run config:env && npm run postinstall.web && ng build client-app",
    "build:all": "npm run config:env && npm run postinstall.web && ng build admin-app && ng build client-app && ng build functions",
    "serve:admin-app": "npm run config:env && npm run postinstall.web && ng serve admin-app --port=3001 --open",
    "serve:client-app": "npm run config:env && npm run postinstall.web && ng serve client-app --port=3002 --open",
    "serve:apps": "npm run config:env && concurrently --kill-others \"npm run postinstall.web && ng serve admin-app --port=4200 --open\" \"npm run postinstall.web && ng serve client-app --port=4201 --open\"",
    "generate:types:api": "npx graphql-codegen --config apps/functions/src/graphql-api/codegen.yml",
    "generate:types:api:watch": "npx graphql-codegen --watch --config apps/functions/src/graphql-api/codegen.yml",
    "generate:types:playground": "npx graphql-codegen --config apps/graphql-playground/codegen.real_data_mode.yml",
    "generate:types:playground:watch": "npx graphql-codegen --watch --config apps/graphql-playground/codegen.real_data_mode.yml",
    "generate:types:playground:mocking": "npx graphql-codegen --config apps/graphql-playground/codegen.mock_data_mode.yml",
    "generate:types:playground:mocking:watch": "npx graphql-codegen --watch --config apps/graphql-playground/codegen.mock_data_mode.yml",
    "deploy:api": "npm run config:env && ng lint functions && npm run build:functions && firebase deploy --only functions:api",
    "serve:api": "npm run config:env && concurrently --kill-others \"npm run generate:types:api:watch\" \"ng lint graphql-api && npm run build:functions && firebase serve --only functions:api\"",
    "serve:playground:mocking": "npm run config:env && concurrently --kill-others \"npm run generate:types:playground:mocking:watch\" \"ng serve graphql-playground\"",
    "serve:playground": "npm run config:env && concurrently --kill-others \"npm run generate:types:playground:watch\" \"ng serve graphql-playground\""
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^8.2.14",
    "@angular/cdk": "^8.2.3",
    "@angular/common": "^8.2.14",
    "@angular/compiler": "^8.2.14",
    "@angular/core": "^8.2.14",
    "@angular/fire": "^5.2.3",
    "@angular/forms": "^8.2.14",
    "@angular/platform-browser": "^8.2.14",
    "@angular/platform-browser-dynamic": "^8.2.14",
    "@angular/platform-server": "^8.2.14",
    "@angular/router": "^8.2.14",
    "@fortawesome/angular-fontawesome": "^0.5.0",
    "@fortawesome/fontawesome-free": "^5.12.0",
    "@nestjs/common": "^6.8.3",
    "@nestjs/config": "^0.3.0",
    "@nestjs/core": "^6.8.3",
    "@nestjs/graphql": "^6.5.5",
    "@nestjs/platform-express": "^6.8.3",
    "@ng-bootstrap/ng-bootstrap": "^5.2.1",
    "@ngrx/core": "^1.2.0",
    "@ngrx/effects": "^8.6.0",
    "@ngrx/entity": "^8.6.0",
    "@ngrx/router-store": "^8.6.0",
    "@ngrx/schematics": "^8.6.0",
    "@ngrx/store": "^8.6.0",
    "@ngrx/store-devtools": "^8.6.0",
    "@ngx-loading-bar/core": "^4.2.0",
    "@ngx-translate/core": "^11.0.1",
    "@nrwl/nx": "^7.8.7",
    "@types/graphql": "^14.5.0",
    "@types/lodash": "^4.14.149",
    "angular-in-memory-web-api": "^0.9.0",
    "apollo-angular": "^1.8.0",
    "apollo-angular-link-http": "^1.9.0",
    "apollo-cache-inmemory": "^1.6.5",
    "apollo-client": "^2.6.8",
    "apollo-server-express": "^2.10.1",
    "bcrypt": "^4.0.1",
    "bootstrap": "^4.4.1",
    "chart.js": "^2.9.3",
    "chartist": "^0.11.4",
    "classlist.js": "^1.1.20150312",
    "colors": "^1.4.0",
    "core-js": "^3.6.0",
    "csurf": "^1.11.0",
    "dotenv-parse-variables": "^0.2.3",
    "firebase": "^7.6.1",
    "firebase-admin": "^8.10.0",
    "firebase-functions": "^3.3.0",
    "graphql": "^14.6.0",
    "graphql-custom-types": "^1.5.1",
    "graphql-tag": "^2.10.3",
    "graphql-tools": "^4.0.7",
    "graphql-type-json": "^0.3.1",
    "hammerjs": "^2.0.8",
    "helmet": "^3.22.0",
    "highlight.js": "^9.16.2",
    "lodash": "^4.17.11",
    "material-design-icons": "^3.0.1",
    "moment": "^2.24.0",
    "ng-inline-svg": "^8.5.1",
    "ngrx-store-freeze": "^0.2.4",
    "ngx-clipboard": "^12.3.0",
    "ngx-daterangepicker-material": "^2.1.9",
    "ngx-highlightjs": "^3.0.3",
    "ngx-perfect-scrollbar": "^8.0.0",
    "ngx-permissions": "^7.0.3",
    "object-path": "^0.11.4",
    "perfect-scrollbar": "^1.4.0",
    "popper.js": "^1.16.0",
    "ramda": "^0.27.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^6.5.3",
    "socicon": "^3.0.5",
    "tooltip.js": "^1.3.3",
    "tslib": "^1.10.0",
    "type-graphql": "^0.17.6",
    "uuid": "^7.0.1",
    "web-animations-js": "^2.3.2",
    "zone.js": "~0.9.1"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.803.23",
    "@angular/cli": "8.3.21",
    "@angular/compiler-cli": "^8.2.14",
    "@angular/language-service": "^8.2.14",
    "@angular/material": "^8.2.3",
    "@angular/material-moment-adapter": "^8.2.3",
    "@compodoc/compodoc": "^1.1.11",
    "@graphql-codegen/cli": "^1.12.2",
    "@graphql-codegen/typescript": "^1.12.2",
    "@graphql-codegen/typescript-apollo-angular": "^1.12.2",
    "@graphql-codegen/typescript-operations": "^1.12.2",
    "@graphql-codegen/typescript-resolvers": "^1.12.2",
    "@nestjs/cli": "^6.14.2",
    "@nestjs/schematics": "^6.7.0",
    "@nestjs/testing": "^6.8.3",
    "@ngrx/schematics": "^8.5.2",
    "@nrwl/angular": "^8.11.2",
    "@nrwl/cypress": "^8.11.2",
    "@nrwl/jest": "8.10.1",
    "@nrwl/nest": "^9.0.2",
    "@nrwl/node": "^8.11.2",
    "@nrwl/schematics": "^8.11.2",
    "@nrwl/workspace": "8.10.1",
    "@nstudio/angular": "8.1.1",
    "@nstudio/web-angular": "^8.0.15",
    "@nstudio/xplat": "^8.0.15",
    "@types/chartist": "^0.9.46",
    "@types/highlight.js": "^9.12.3",
    "@types/jest": "24.0.24",
    "@types/node": "~12.12.21",
    "@types/object-path": "^0.11.0",
    "codelyzer": "~5.2.1",
    "concurrently": "^5.0.2",
    "css-loader": "^3.2.1",
    "cypress": "3.8.0",
    "dotenv": "^8.2.0",
    "eslint": "6.8.0",
    "jest": "24.9.0",
    "jest-preset-angular": "^7.1.1",
    "node-sass": "^4.13.0",
    "npm-run-all": "^4.1.5",
    "prettier": "1.19.1",
    "replace-in-file": "^5.0.2",
    "serialize-javascript": "^2.1.1",
    "ts-jest": "24.2.0",
    "ts-node": "^8.6.2",
    "tslint": "~5.20.1",
    "typescript": "~3.4.5",
    "wait-on": "~3.3.0",
    "yarn": "^1.21.1"
  },
  "xplat": {
    "prefix": "admin",
    "framework": "angular"
  },
  "resolutions": {
    "serialize-javascript": "^2.1.1"
  }
}
